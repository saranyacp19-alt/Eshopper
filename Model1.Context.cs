//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mvcproject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCProjectEntities : DbContext
    {
        public MVCProjectEntities()
            : base("name=MVCProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Company_Reg> Company_Reg { get; set; }
        public virtual DbSet<Job_Details> Job_Details { get; set; }
        public virtual DbSet<Login_TB> Login_TB { get; set; }
        public virtual DbSet<User_RegTab> User_RegTab { get; set; }
        public virtual DbSet<Apply_insTB> Apply_insTB { get; set; }
    
        public virtual int sp_CompanyReg(Nullable<int> cid, string cna, string cmail, string cphone, string caddr, string cwebaddr)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnaParameter = cna != null ?
                new ObjectParameter("cna", cna) :
                new ObjectParameter("cna", typeof(string));
    
            var cmailParameter = cmail != null ?
                new ObjectParameter("cmail", cmail) :
                new ObjectParameter("cmail", typeof(string));
    
            var cphoneParameter = cphone != null ?
                new ObjectParameter("cphone", cphone) :
                new ObjectParameter("cphone", typeof(string));
    
            var caddrParameter = caddr != null ?
                new ObjectParameter("caddr", caddr) :
                new ObjectParameter("caddr", typeof(string));
    
            var cwebaddrParameter = cwebaddr != null ?
                new ObjectParameter("cwebaddr", cwebaddr) :
                new ObjectParameter("cwebaddr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CompanyReg", cidParameter, cnaParameter, cmailParameter, cphoneParameter, caddrParameter, cwebaddrParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginCountId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginCountId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginId", unaParameter, pwdParameter);
        }
    
        public virtual int sp_loginsert(Nullable<int> rid, string una, string pw, string ltype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var ltypeParameter = ltype != null ?
                new ObjectParameter("ltype", ltype) :
                new ObjectParameter("ltype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loginsert", ridParameter, unaParameter, pwParameter, ltypeParameter);
        }
    
        public virtual ObjectResult<string> sp_loginType(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_loginType", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdLogin");
        }
    
        public virtual int sp_userReg(Nullable<int> uid, string una, Nullable<int> uag, string uaddr, string uphone, string umail, string ulocation, string uskill, string uqual, Nullable<int> uexp, Nullable<System.DateTime> udob)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var uagParameter = uag.HasValue ?
                new ObjectParameter("uag", uag) :
                new ObjectParameter("uag", typeof(int));
    
            var uaddrParameter = uaddr != null ?
                new ObjectParameter("uaddr", uaddr) :
                new ObjectParameter("uaddr", typeof(string));
    
            var uphoneParameter = uphone != null ?
                new ObjectParameter("uphone", uphone) :
                new ObjectParameter("uphone", typeof(string));
    
            var umailParameter = umail != null ?
                new ObjectParameter("umail", umail) :
                new ObjectParameter("umail", typeof(string));
    
            var ulocationParameter = ulocation != null ?
                new ObjectParameter("ulocation", ulocation) :
                new ObjectParameter("ulocation", typeof(string));
    
            var uskillParameter = uskill != null ?
                new ObjectParameter("uskill", uskill) :
                new ObjectParameter("uskill", typeof(string));
    
            var uqualParameter = uqual != null ?
                new ObjectParameter("uqual", uqual) :
                new ObjectParameter("uqual", typeof(string));
    
            var uexpParameter = uexp.HasValue ?
                new ObjectParameter("uexp", uexp) :
                new ObjectParameter("uexp", typeof(int));
    
            var udobParameter = udob.HasValue ?
                new ObjectParameter("udob", udob) :
                new ObjectParameter("udob", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userReg", uidParameter, unaParameter, uagParameter, uaddrParameter, uphoneParameter, umailParameter, ulocationParameter, uskillParameter, uqualParameter, uexpParameter, udobParameter);
        }
    
        public virtual int sp_JobInsert(Nullable<int> cid, string title, string dis, Nullable<int> exep, string jskill, Nullable<System.DateTime> jdate, string jstatus, string jlocation, string jsal, string jtype)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var disParameter = dis != null ?
                new ObjectParameter("dis", dis) :
                new ObjectParameter("dis", typeof(string));
    
            var exepParameter = exep.HasValue ?
                new ObjectParameter("exep", exep) :
                new ObjectParameter("exep", typeof(int));
    
            var jskillParameter = jskill != null ?
                new ObjectParameter("jskill", jskill) :
                new ObjectParameter("jskill", typeof(string));
    
            var jdateParameter = jdate.HasValue ?
                new ObjectParameter("jdate", jdate) :
                new ObjectParameter("jdate", typeof(System.DateTime));
    
            var jstatusParameter = jstatus != null ?
                new ObjectParameter("jstatus", jstatus) :
                new ObjectParameter("jstatus", typeof(string));
    
            var jlocationParameter = jlocation != null ?
                new ObjectParameter("jlocation", jlocation) :
                new ObjectParameter("jlocation", typeof(string));
    
            var jsalParameter = jsal != null ?
                new ObjectParameter("jsal", jsal) :
                new ObjectParameter("jsal", typeof(string));
    
            var jtypeParameter = jtype != null ?
                new ObjectParameter("jtype", jtype) :
                new ObjectParameter("jtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_JobInsert", cidParameter, titleParameter, disParameter, exepParameter, jskillParameter, jdateParameter, jstatusParameter, jlocationParameter, jsalParameter, jtypeParameter);
        }
    
        public virtual ObjectResult<sp_viewJob_Result> sp_viewJob()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_viewJob_Result>("sp_viewJob");
        }
    
        public virtual int sp_jobsearches(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearches", qryParameter);
        }
    
        public virtual int sp_applyJob(Nullable<int> uid, Nullable<int> cid, Nullable<int> jid, string resume, Nullable<System.DateTime> date, string status)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_applyJob", uidParameter, cidParameter, jidParameter, resumeParameter, dateParameter, statusParameter);
        }
    
     
        public virtual ObjectResult<sp_GetJob_DataWithID_Result> sp_GetJob_DataWithID(Nullable<int> jid)
        {
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetJob_DataWithID_Result>("sp_GetJob_DataWithID", jidParameter);
        }
    
        public virtual int SP_CountUserAppliedJobWithID1(Nullable<int> userid, Nullable<int> jobid, ObjectParameter status)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("Jobid", jobid) :
                new ObjectParameter("Jobid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CountUserAppliedJobWithID1", useridParameter, jobidParameter, status);
        }
    
        public virtual ObjectResult<SP_GetJobDatawithID_Result> SP_GetJobDatawithID(Nullable<int> jobid)
        {
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("jobid", jobid) :
                new ObjectParameter("jobid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetJobDatawithID_Result>("SP_GetJobDatawithID", jobidParameter);
        }
    
        public virtual int SP_PostApplication(Nullable<int> job_Id, Nullable<int> company_id, Nullable<int> user_id, string resume, Nullable<System.DateTime> app_Date, string app_Status)
        {
            var job_IdParameter = job_Id.HasValue ?
                new ObjectParameter("Job_Id", job_Id) :
                new ObjectParameter("Job_Id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("Company_id", company_id) :
                new ObjectParameter("Company_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("Resume", resume) :
                new ObjectParameter("Resume", typeof(string));
    
            var app_DateParameter = app_Date.HasValue ?
                new ObjectParameter("App_Date", app_Date) :
                new ObjectParameter("App_Date", typeof(System.DateTime));
    
            var app_StatusParameter = app_Status != null ?
                new ObjectParameter("App_Status", app_Status) :
                new ObjectParameter("App_Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PostApplication", job_IdParameter, company_idParameter, user_idParameter, resumeParameter, app_DateParameter, app_StatusParameter);
        }
    }
}
